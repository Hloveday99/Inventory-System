{"version":3,"sources":["components/CreateItem.js","components/UpdateInvent.js","components/Item.js","components/Inventory.js","App.js","serviceWorker.js","index.js"],"names":["CreateItem","props","addLocation","newLocations","state","locations","map","x","push","setState","removeLocation","index","splice","handleLocationChange","value","handleChange","target","type","checked","parseInt","name","handleSubmit","event","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","refresh","price","description","quantity","ordertime","arrive","In_stock","Active","displayLocations","this","location","key","onChange","className","onClick","id","onSubmit","placeholder","htmlFor","order","stock","React","Component","UpdateInvent","item","_id","close","Item","part","useState","open","setOpen","toggleOpen","displayUpdate","inventory","getInventory","response","json","displayInventory","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8f1ab7c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass CreateItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n      quantity: \"\",\r\n      ordertime: \"\",\r\n      arrive: \"\",\r\n      locations: [\"\"],\r\n      Active: false,\r\n    };\r\n  }\r\n  addLocation = () => {\r\n    const newLocations = this.state.locations.map((x) => x);\r\n    newLocations.push(\"\");\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  removeLocation = (index) => {\r\n    const newLocations = this.state.locations.map(x => x);\r\n    newLocations.splice(index, 1);\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  handleLocationChange = (value, index) => {\r\n    const newLocations = this.state.locations.map((x) => x);\r\n    newLocations[index] = value;\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  handleChange = ({ target }) => {\r\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    value = target.type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [target.name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/shop-exam`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    })\r\n      .then(this.props.refresh)\r\n      .then(() =>\r\n        this.setState({\r\n      name: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n      quantity: \"\",\r\n      ordertime: \"\",\r\n      arrive: \"\",\r\n      locations: [\"\"],\r\n      In_stock: false,\r\n        })\r\n      );\r\n  };\r\n  render() {\r\n    const displayLocations = this.state.locations.map((location, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <select\r\n            value={this.state.locations[index]}\r\n            onChange={({target}) =>\r\n              this.handleLocationChange(target.value, index)\r\n            }\r\n          >\r\n            <option value=\"\">Store's in stock</option>\r\n            <option value=\"calgary\">Calgary</option>\r\n            <option value=\"victoria\">Victoria</option>\r\n            <option value=\"ontario\">Ontario</option>\r\n            <option value=\"quebec\">Quebec</option>\r\n            <option value=\"richmond\">Richmond</option>\r\n            <option value=\"vancouver\">Vancouver</option>\r\n          </select>\r\n          <input\r\n            className=\"del-btn\"\r\n            type=\"button\"\r\n            value=\"X\"\r\n            onClick={() => this.removeLocation(index)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <form id=\"create\" onSubmit={this.handleSubmit}>\r\n      {/* title */}\r\n        <input\r\n          name=\"name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Item Name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <br></br>\r\n        {/* Item price */}\r\n        <input\r\n          name=\"price\"\r\n          id=\"name\"\r\n          type=\"decimal\"\r\n          placeholder=\"Price\"\r\n          value={this.state.price}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* Item description */}\r\n        <br></br>\r\n\r\n        <input\r\n          name=\"description\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Item Description\"\r\n          value={this.state.description}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        {/* Item quantity */}\r\n        <div>\r\n\r\n          <input\r\n            name=\"quantity\"\r\n            id=\"name\"\r\n            type=\"number\"\r\n            placeholder=\"Quantity\"\r\n            value={this.state.quantity}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        {/* Date ordered */}\r\n        <div>\r\n          <label htmlFor=\"order\">Order Date</label>\r\n          <br></br>\r\n          <input\r\n          id=\"name\"\r\n            type=\"date\"\r\n            placeholder=\"Order Date\"\r\n            value={this.state.order}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        {/* ETA date */}\r\n        <div>\r\n          <label> Arrive By </label>\r\n          <br></br>\r\n          <input\r\n            name=\"arrive\"\r\n            id=\"name\"\r\n            type=\"date\"\r\n            value={this.state.arrive}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        {displayLocations}\r\n        <input type=\"button\" value=\"Add Location\" onClick={this.addLocation} />\r\n        <div>\r\n          <label htmlFor=\"stock\">Out of stock</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"checkbox\"\r\n            checked={this.state.stock}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button> Add Product </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n// don't touch this page\r\n\r\nexport default CreateItem;\r\n","import React from \"react\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass UpdateInvent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { item } = props;\r\n    this.state = {\r\n      name: item.name,\r\n      price: item.price,\r\n      description: item.description,\r\n      quantity: item.quantity,\r\n      ordertime: item.ordertime,\r\n      locations: item.locations,\r\n      stock: item.stock,\r\n    };\r\n  }\r\n  addLocation = () => {\r\n    const newLocations = this.state.locations.map((x) => x);\r\n    newLocations.push(\"\");\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  removeLocation = (index) => {\r\n    const newLocations = this.state.locations.map(x => x);\r\n    newLocations.splice(index, 1);\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  handleLocationChange = (value, index) => {\r\n    const newLocations = this.state.locations.map((x) => x);\r\n    newLocations[index] = value;\r\n    this.setState({ locations: newLocations });\r\n  };\r\n  handleChange = ({ target }) => {\r\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    value = target.type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [target.name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/shop-exam/${this.props.item._id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    })\r\n      .then(this.props.refresh)\r\n      .then(this.props.close)\r\n    };\r\n\r\n  render() {\r\n    const displayLocations = this.state.locations.map((location, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <select\r\n            value={this.state.locations[index]}\r\n            onChange={({target}) =>\r\n              this.handleLocationChange(target.value, index)\r\n            }\r\n          >\r\n            <option value=\"\">Store's in stock</option>\r\n            <option value=\"calgary\">Calgary</option>\r\n            <option value=\"victoria\">Victoria</option>\r\n            <option value=\"ontario\">Ontario</option>\r\n            <option value=\"quebec\">Quebec</option>\r\n            <option value=\"richmond\">Richmond</option>\r\n            <option value=\"vancouver\">Vancouver</option>\r\n          </select>\r\n          <input\r\n            className=\"del-btn\"\r\n            type=\"button\"\r\n            value=\"X\"\r\n            onClick={() => this.removeLocation(index)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <form className=\"update\" onSubmit={this.handleSubmit}>\r\n        {/* title */}\r\n        <input\r\n          name= \"name\" \r\n          type=\"text\"\r\n          placeholder=\"Item Name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* Item price */}\r\n        <input\r\n          name=\"price\"\r\n          type=\"number\"\r\n          placeholder=\"Price\"\r\n          value={this.state.price}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* Item description */}\r\n\r\n        <input\r\n          name=\"description\"\r\n          type=\"text\"\r\n          placeholder=\"Item description\"\r\n          value={this.state.description}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        {/* Item Quantity */}\r\n        <div>\r\n\r\n          <input\r\n            name=\"quantity\"\r\n            type=\"number\"\r\n            placeholder=\"Quantity\"\r\n            value={this.state.quantity}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        {/* Date ordered */}\r\n        <div>\r\n          <label htmlFor=\"order\">Order Date</label>\r\n          <br></br>\r\n          <input\r\n            name=\"order\"\r\n            type=\"date\"\r\n            value={this.state.order}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label> Arrive By</label>\r\n          <br></br>\r\n          <input\r\n            name=\"arrive\"\r\n            type=\"date\"\r\n            value={this.state.arrive}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        {displayLocations}\r\n        <input type=\"button\" value=\"Add Location\" onClick={this.addLocation} />\r\n        <div>\r\n          <label htmlFor=\"stock\">Out of stock</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"checkbox\"\r\n            checked={this.state.stock}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button> Update Item </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateInvent;\r\n","import React, { useState } from 'react';\r\nimport UpdateInvent from './UpdateInvent';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst Item = ({ part, refresh }) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const deleteItem = () => {\r\n        fetch(`${API_URL}/shop-exam/${part._id}`, {\r\n        method: \"DELETE\"\r\n    }).then(refresh)\r\n    }\r\n    const toggleOpen = () => setOpen(!open)\r\n    const displayUpdate = open ?\r\n    <fieldset>\r\n        <UpdateInvent item={part} refresh={refresh} close={toggleOpen}/>\r\n    </fieldset> :\r\n    '';\r\n    return (\r\n        <div>\r\n            <span>{part.name}</span>\r\n            <button className=\"edit\" onClick={toggleOpen}>Edit</button>\r\n            <button className=\"del-btn\" onClick={deleteItem}>X</button>\r\n            {displayUpdate}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Item","import React, { Component } from 'react'\r\nimport CreateItem from './CreateItem';\r\nimport Item from './Item';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        inventory: []\r\n    }\r\n    getInventory = () => {\r\n        fetch(`${API_URL}/shop-exam`)\r\n            .then(response => response.json())\r\n            .then(inventory => this.setState({inventory}))\r\n    }\r\n    componentDidMount(){\r\n        this.getInventory()\r\n    }\r\n    render() {\r\n        const displayInventory = this.state.inventory.map (part => \r\n             <Item key={part._id}\r\n             part={part}\r\n             refresh={this.getInventory}\r\n             />\r\n             )\r\n\r\n        return (\r\n            <div>\r\n                <h1>Inventory system</h1>\r\n                <CreateItem refresh={this.getInventory}/>\r\n                {displayInventory}\r\n                </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Inventory from './components/Inventory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Inventory/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}